/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.caro;

import java.awt.Color;
import java.awt.GridLayout;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 *
 * @author quoczuong
 */
public class TicTacToe extends javax.swing.JFrame {

    /**
     * Creates new form TicTacToe
     */
    public static final int numRows = 3;
    public static final int numCols = 3;
    public static final int redChess = 0;
    public static final int blueChess = 1;


    
    chess map[][];
    int luotDi = 1;
    int redPoint = 0;
    int bluePoint = 0;

    public void generateBoard(int row, int col) throws IOException {
        
     
        map = new chess[row][col];
        pnlBoard.setLayout(new GridLayout(row, col));
        pnlBoard.removeAll();
        pnlBoard.revalidate();
        pnlBoard.repaint();

        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                map[i][j] = new chess(this, i, j, 10);
                pnlBoard.add(map[i][j]);

            }
        }


    }

    public int getLuotDi() {
        return luotDi;

    }

    public void luotDiTiepTheo() {
        luotDi = 1 - luotDi;
        if (luotDi == 0) {
            lblTurn.setText("O");
            lblTurn.setBackground(Color.red);
            lblTurn.setForeground(Color.red);
            lblTurnText.setBackground(Color.red);
            lblTurnText.setForeground(Color.red);

        } else {
            lblTurn.setText("X");
            lblTurn.setBackground(Color.blue);
            lblTurn.setForeground(Color.blue);
            lblTurnText.setBackground(Color.blue);
            lblTurnText.setForeground(Color.blue);
        }
    }

    public boolean coQuanCo(chess c) {
        return c.getValue() != 10;
    }

    public boolean cungMau(chess c, int luotDi) {

        return c.getValue() == luotDi;
    }

    public int upDown(int row, int col) {
        int count = 0;
        int win = 0;
        int i;

        //check theo chieu len
        for (i = row - 1; i >= 0; i--) {
            if (coQuanCo(map[i][col]) && cungMau(map[i][col], this.luotDi)) {
                count++;
            }

        }

        //check theo chieu xuong
        for (i = row + 1; i < numCols; i++) {
            if (coQuanCo(map[i][col]) && cungMau(map[i][col], this.luotDi)) {
                count++;
            }

        }

        if (count >= 2) {
            win = 1;
        }
        return win;
    }

    public int leftRight(int row, int col) {
        int count = 0;
        int win = 0;
        int i;

        //check theo chieu qua trai
        for (i = col - 1; i >= 0; i--) {
            if (coQuanCo(map[row][i]) && cungMau(map[row][i], this.luotDi)) {
                count++;
            }

        }

        //check theo chieu xuong
        for (i = col + 1; i < numCols; i++) {
            if (coQuanCo(map[row][i]) && cungMau(map[row][i], this.luotDi)) {
                count++;
            }

        }

        if (count >= 2) {
            win = 1;
        }
        return win;
    }

    public boolean checkWin(int row, int col) {
        int upDown = upDown(row, col);
        int leftRight = leftRight(row, col);
        int win = 0;
        win = upDown + leftRight;

        if (win > 0) {
            System.out.println("to Win");
            if (this.getLuotDi() == 0) {
                System.out.println("red win");
                redPoint++;
                lblRedPoint.setText(redPoint + "");
            } else {
                System.out.println("blue win");
                bluePoint++;
                lblBluePoint.setText(bluePoint + "");
            }
        }
        return win > 0;
    }

    public TicTacToe() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null); // canh giua man hinh
        generateBoard(numCols,numRows);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlInformation = new javax.swing.JPanel();
        lblTurnText = new javax.swing.JLabel();
        lblTurn = new javax.swing.JLabel();
        resetBtn = new javax.swing.JButton();
        lblBluePoint = new javax.swing.JLabel();
        lblRed = new javax.swing.JLabel();
        lblBlue = new javax.swing.JLabel();
        threeModeBtn = new javax.swing.JButton();
        fiveModeBtn = new javax.swing.JButton();
        lblRedPoint = new javax.swing.JLabel();
        pnlBoard = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(475, 655));

        pnlInformation.setBorder(javax.swing.BorderFactory.createTitledBorder("Game Information"));

        lblTurnText.setText("Turn");

        lblTurn.setText("X");

        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        lblBluePoint.setForeground(new java.awt.Color(0, 51, 255));
        lblBluePoint.setText("0");

        lblRed.setForeground(new java.awt.Color(255, 0, 51));
        lblRed.setText("Red");

        lblBlue.setForeground(new java.awt.Color(0, 51, 255));
        lblBlue.setText("Blue");

        threeModeBtn.setText("3X3");
        threeModeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeModeBtnActionPerformed(evt);
            }
        });

        fiveModeBtn.setText("5X5");
        fiveModeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveModeBtnActionPerformed(evt);
            }
        });

        lblRedPoint.setForeground(new java.awt.Color(255, 0, 102));
        lblRedPoint.setText("0");

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(lblRed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblRedPoint)
                        .addGap(74, 74, 74)
                        .addComponent(lblTurnText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTurn)
                        .addGap(9, 9, 9))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addComponent(threeModeBtn)
                        .addGap(18, 18, 18)
                        .addComponent(resetBtn)))
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(fiveModeBtn)
                        .addContainerGap(149, Short.MAX_VALUE))
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblBlue)
                        .addGap(18, 18, 18)
                        .addComponent(lblBluePoint)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblRed)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTurnText)
                            .addComponent(lblTurn))
                        .addComponent(lblRedPoint))
                    .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBlue)
                        .addComponent(lblBluePoint)))
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(threeModeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resetBtn)
                    .addComponent(fiveModeBtn))
                .addContainerGap())
        );

        pnlBoard.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlBoard.setPreferredSize(new java.awt.Dimension(200, 200));
        pnlBoard.setRequestFocusEnabled(false);
        pnlBoard.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlBoard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        try {
            generateBoard(3,3);
        } catch (IOException ex) {
            Logger.getLogger(TicTacToe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_resetBtnActionPerformed

    private void threeModeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeModeBtnActionPerformed
        try {
            // TODO add your handling code here:
            generateBoard(3, 3);
        } catch (IOException ex) {
            Logger.getLogger(TicTacToe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_threeModeBtnActionPerformed

    private void fiveModeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveModeBtnActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            
            generateBoard(5, 5);
        } catch (IOException ex) {
            Logger.getLogger(TicTacToe.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fiveModeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicTacToe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    new TicTacToe().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(TicTacToe.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fiveModeBtn;
    private javax.swing.JLabel lblBlue;
    private javax.swing.JLabel lblBluePoint;
    private javax.swing.JLabel lblRed;
    private javax.swing.JLabel lblRedPoint;
    private javax.swing.JLabel lblTurn;
    private javax.swing.JLabel lblTurnText;
    private javax.swing.JPanel pnlBoard;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton threeModeBtn;
    // End of variables declaration//GEN-END:variables
}
